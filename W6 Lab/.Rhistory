t5 <- order(top5$total, descending=TRUE)
top5
top5 >%>
top5 <- top_n(country, 5, total)
arrange(top5)
arrange(top5, desc())
arrange.data.frame(top5, desc())
arrange(top5,...,desc())
arrange(top5,desc())
arrange(desc(top5))
arrange(top5, desc(), total)
arrange(top5, desc())
arrange(top5, desc(), .by_group=TRUE)
arrange(top5, desc(total), .by_group=TRUE)
arrange(top5, desc(total))
top5 <- arrange(top5, desc(total))
View(top5)
top5 <- arrange(top_n(country, 5, total), desc(total))
top5
plot(countries~volunteers, data=country)
plot(country~volunteers, data=country)
plot(country~volunteers, data=country, ylim=0,705000)
t <-
head (country[order(country$total,
decreasing=TRUE),])
head (country[order(country$total,
decreasing=TRUE),])
setwd("C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\ESP106_week5_data")
country <- read.csv("countrytotals.csv")
tidytue <- read.csv("countrytotals.csv")
setwd("C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\ESP106_week5_data")
tidytue <- read.csv("countrytotals.csv")
head (tidytue[order(tidytue$total,
decreasing=TRUE),])
library(dplyr)
top5 <- arrange(top_n(tidytue, 5, total), desc(total))
top5
library(ggplot2)
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point()
library(ggplot2)
ggplot(tidytue, aes(x = country)) +
geom_histogram(binwidth = .5)
library(ggplot2)
ggplot(tidytue, aes(x=volunteers)) +
geom_histogram()
library(ggplot2)
ggplot(tidytue, aes(x=country)) +
geom_histogram()
View(tidytue)
library(ggplot2)
ggplot(tidytue, aes(x=volunteers)) +
geom_histogram()
ggplot(tidytue, aes(x=volunteers)) +
geom_histogram(bins=3)
ggplot(tidytue, aes(x=volunteers)) +
geom_histogram(bins=10)
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point()
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point() +
ylim(0,50) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point() +
ylim(0,1000) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point() +
ylim(0,705000) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point() +
ylim(0,7000) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_point() +
ylim(0,705000) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(ggplot2)
ggplot(tidytue, aes(x=volunteers, y=country)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", width=1) +
coord_flip()
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", width=1) +
coord_flip()+
scale_x_continuous(n.breaks=10) +
scale_y_continuous(n.breaks=10)
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", width=1) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "count", width=1) +
coord_flip()
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
require("knitr")
opts_knit$set(root.dir = "C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\") #use this to set your working directory so knitr understands it
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
View(tidytue)
tidytue <- cbind(tidytue, tidytue$volunteers/tidytue$num_events)
ratio <- tidytue$volunteers/tidytue$num_events
tidytue <- cbind(tidytue, ratio)
tidytue <- cbind[,-14]
tidytue <- tidytue[,-14]
head (tidytue[order(tidytue$ratio,
decreasing=TRUE),])
head (tidytue[order(tidytue$ratio,
decreasing=FALSE),])
tidytue <- [,-14]
tidytue <- tidytue[,-14]
ratio <- tidytue$total/tidytue$num_events
tidytue <- cbind(tidytue, ratio)
head (tidytue[order(tidytue$ratio,
decreasing=TRUE),])
contype <- read.csv("continenttypes.csv")
setwd("C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\ESP106_week5_data")
tidytue <- read.csv("countrytotals.csv")
contype <- read.csv("continenttypes.csv")
contype <- read.csv("continenttypes.csv")
contype <- read.csv('continenttypes.csv')
contype <- read.csv('continenttypes.csv')
require("knitr")
opts_knit$set(root.dir = "C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\") #use this to set your working directory so knitr understands it
setwd("C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\ESP106_week5_data")
tidytue <- read.csv("countrytotals.csv")
#hint order(datacolumn, decreasing=TRUE) will give you the ranking of the countries by the values in the data column
#you can use this to re-order the country data frame, ordering it from the country with the most trash picked up to the least
head (tidytue[order(tidytue$total,
decreasing=TRUE),])
library(dplyr)
top5 <- arrange(top_n(tidytue, 5, total), desc(total))
top5
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
ratio <- tidytue$total/tidytue$num_events
tidytue <- cbind(tidytue, ratio)
head (tidytue[order(tidytue$ratio,
decreasing=TRUE),])
contype <- read.csv('continenttypes.csv')
contype <- read.data.frame('continenttypes.csv')
contype <- read.csv('continenttypes.csv')
setwd("C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\ESP106_week5_data\\")
tidytue <- read.csv("countrytotals.csv")
contype <- read.csv('continenttypes.csv')
setwd("C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\ESP106_week5_data\\")
contype <- read.csv('continenttypes.csv')
View(contype)
library(ggplot2)
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="dodge", stat="identity")
require("knitr")
opts_knit$set(root.dir = "C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W5 Lab\\")
#use this to set your working directory so knitr understands it
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_boxplot(fill="slateblue", alpha=0.2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
summary(tidytue)
summary(tidytue$volunteers)
sd(tidytue$volunteers)
sd(tidytue)
summary(tidytue$volunteers)
summary(tidytue$volunteers)
sd(tidytue$volunteers)
summary
summary(tidytue$volunteers)
vol <- tidytue$volunteers/tidytue$num_events
ratio <- tidytue$total/vol
tidytue <- cbind(tidytue, ratio)
ratio <- as.integer(tidytue$total/vol)
tidytue <- cbind(tidytue, ratio)
tidytue <- [,-14]
tidytue <- tidytue[,-14]
head (tidytue[order(tidytue$ratio,
decreasing=TRUE),])
ratio <- as.integer(tidytue$total/tidytue$num_events)
tidytue <- cbind(tidytue, ratio)
tidytue <- tidytue[,-14]
ratio <- as.number(tidytue$total/tidytue$num_events)
ratio <- tidytue$total/tidytue$num_events
tidytue <- cbind(tidytue, ratio)
tidytue <- tidytue[,-14]
head (tidytue[order(tidytue$ratio,
decreasing=TRUE),])
te <- contype$total/contype$events
contype <- cbind(contype, te)
colnames(contype)['te'] <- 'plastic type per event'
te <- contype$total/contype$events
contype <- cbind(contype, te)
contype <- contype[,-6]
ggplot(contype, aes(continent, fill=plastic_type)) +
geom_bar(position="fill", stat="count")
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="fill", stat="identity")
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="stack", stat="identity")
summary(contype$events)
library(ggplot2)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity")
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="stack", stat="identity")
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity")
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="dodge", stat="identity") +
labs(title="Type of Plastic Trash around the World", y = "Numbers of Plastic Trash", x = "Continent") +
scale_fill_discrete(labels = c("Empty", "High density polyethylene", "Low density polyethylene", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="dodge", stat="identity") +
labs(title="Type of Plastic Trash around the World", y = "Numbers of Plastic Trash", x = "Continent") +
scale_fill_discrete(labels = c("Empty", "High Density Polyethylene", "Low Density Polyethylene", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="dodge", stat="identity") +
labs(title="Type of Plastic Trash around the World", y = "Numbers of Plastic Trash", x = "Continent") +
scale_fill_discrete(labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
ggplot(contype, aes(fill=plastic_type, y=total, x=continent)) +
geom_bar(position="dodge", stat="identity") +
labs(title="Type of Plastic Trash around the World", y = "Numbers of Plastic Trash", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
library(ggplot2)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC ")) +
geom_text(aes(label=Number), position=position_dodge(width=0.9), vjust=-0.25)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC ")) +
geom_text(aes(label=te), position=position_dodge(width=0.9), vjust=-0.25)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
contype[, 6] <- round(contype[, 6], digits = 2)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))  +
geom_text(aes(label=te))
library(ggplot2)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC ")) +
geom_text(aes(label=te), position=position_stack(width=0.9), vjust=-0.25)
library(ggplot2)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC ")) +
geom_text(aes(label=te), position=position_stack(), vjust=-0.25)
ggplot(contype, aes(fill=plastic_type, y=te, x=continent)) +
geom_bar(position="stack", stat="identity") +
labs(title="Type of Plastic Trash Picked Up around the World", y = "Numbers of Plastic Trash picked up per Event", x = "Continent") +
scale_fill_discrete(name = "Plastic Type", labels = c("Empty", "HDPE", "LDPE", "Other", "Polyester ", "Polypropylene", "Polystyrene", "PVC "))
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 40) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", color="orange", fill=rgb(0.1,0.4,0.5,0.7)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", color="blue", fill=rgb(0.1,0.4,0.5,0.7)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", color="rainbow", fill=rgb(0.1,0.4,0.5,0.7)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
coord_flip()
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none") +
coord_flip()
library(RColorBrewer)
library(ggplot2)
library(RColorBrewer)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", width=0.2) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", width=1) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity", width=2) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
theme_ipsum() +
theme(legend.position="none") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
coord_flip()
library(ggplot2)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
tidytue$volunteers <- as.integer(tidytue$volunteers)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
scale_y_continuous(breaks = integer_breaks()) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
scale_y_continuous(breaks= pretty_breaks()) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
scale_y_continuous(breaks= int_breaks()) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
scale_y_continuous(breaks= integer_breaks()) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
scale_y_continuous(breaks=c(0, 100000, 200000, 300000, 400000)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
tidytue$country['United States of America'] <- tidytue$country['USA']
tidytue$country['United States of America'] <- 'USA'
tidytue$country <- gsub('United States of America', 'USA', tidytue$country)
tidytue$country <- gsub('United Kingdom of Great Britain & Northern Ireland', 'UK', tidytue$country)
tidytue$country <- gsub('United Arab Emirates', 'UAE', tidytue$country)
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
theme(axis.text.x = element_text(hjust=0.5)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
theme(axis.text.x = element_text(hjust=5)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
theme(axis.text.y = element_text(hjust=5)) +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Number of Trash Pick-up Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
ggplot(tidytue, aes(x=country, y=volunteers)) +
geom_bar(stat = "identity") +
labs(title="Trash Picking-up Volunteers around the World", y = "Number of Volunteers", x = "Country") +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
path <- "...."
knitr::opts_knit$set(root.dir = path)
setwd(path)
install.packages('terra', repos='https://rspatial.r-universe.dev')
library(terra)
setwd('C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W6 Lab\\')
unzip('Lab 6.zip')
bluew <- vect('Blue Whale Migration Data\\points.shp')
knitr::opts_chunk$set(echo = TRUE)
path <- "...."
knitr::opts_knit$set(root.dir = path)
setwd(path)
ggplot(t, aes(x=count)) +
geom_histogram(bins=30, fill="aquamarine", color="#e9ecef", alpha=0.9) +
ggtitle("Distribution of Blue Whale Observation") +
labs(x="Blue Whale Observation", y="Frequency")
knitr::opts_chunk$set(echo = TRUE)
path <- "...."
knitr::opts_knit$set(root.dir = path)
setwd(path)
install.packages('terra', repos='https://rspatial.r-universe.dev')
library(terra)
setwd('C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W6 Lab\\')
unzip('Lab 6.zip')
bluew <- vect('Blue Whale Migration Data\\points.shp')
summary(bluew$ind_ident)
install.packages("terra", repos = "https://rspatial.r-universe.dev")
install.packages('geodata')
wrld <- geodata::world(path="C:\\Users\\Benny Panjaitan\\Documents\\GitHub\\esp106-Naomi\\W6 Lab\\")
# Step 1. plot the countries using the extent of the whale data to only show the area of interest.
# the area of interest
aoi <- ext(bluew) + 2
plot(wrld, ext=aoi, col='grey83', background='lightcyan')
#Step 2: plot the whale points. You can use either the "points" method or "plot( , add=TRUE)". The latter is easier for coloring, but you need to tell it not to add a legend.
n <- (nrow(bluew))
plot(bluew, col=rainbow(n), cex=0.4, pch=16, alpha=1, legend=FALSE, add=TRUE)
w8 <- subset(bluew, bluew$ind_ident=="2008CA-Bmu-00825")
w5 <- subset(bluew, bluew$ind_ident=="2005CA-Bmu-10821")
ww <- rbind(w8, w5)
aoi <- ext(bluew) + 2
plot(wrld, ext=aoi, col='grey83', background='lightcyan')
w <- nrow(ww)
plot(ww, "ind_ident", col=rainbow(w), cex=0.4, pch=16, alpha=1, legend=TRUE, add=TRUE)
mpa <- vect('MPAs\\mpas.shp')
head(mpa)
install.packages("geodata")
#Hint: use the crop() function
e <- ext(-128, -115, 32, 40)
wco <- crop(mpa, e)
plot(wrld, ext=e, col='grey83')
lines(wco, col="blue")
f <- is.related(bluew, wco, "intersects")
x = table(f)
x[2] / sum(x)
#tapply ind_ident 141
g <- is.related(ww, wco, "intersects")
t <- table(g)
t
r <- rast(wco, res=1/6)
r <- rasterize(bluew, r, fun="count")
r
plot(r)
polys(wrld, col='grey83')
lines(wco, col="blue")
distance(r)
t <- extract(r, bluew)
library(ggplot2)
ggplot(t, aes(x=count)) +
geom_histogram(bins=30, fill="aquamarine", color="#e9ecef", alpha=0.9) +
ggtitle("Distribution of Blue Whale Observation") +
labs(x="Blue Whale Observation", y="Frequency")
ggplot(t, aes(x=count)) +
geom_histogram(bins=30, fill="paleturquoise", color="#e9ecef", alpha=0.9) +
ggtitle("Distribution of Blue Whale Observation") +
labs(x="Blue Whale Observation", y="Frequency")
ggplot(t, aes(x=count)) +
geom_histogram(bins=30, fill="turquoise", color="#e9ecef", alpha=0.9) +
ggtitle("Distribution of Blue Whale Observation") +
labs(x="Blue Whale Observation", y="Frequency")
data(iris)
force(iris)
view(iris)
View(iris)
tapply(iris$Sepal.Width, iris$Species, median)
tapply(iris$Sepal.Width, iris$Species, mean)
tapply(iris$Sepal.Width, iris$Species, min)
#tapply ind_ident 141
tapply(bluew$ind_ident, wco, min)
head(bluew)
table(bluew)
head(bluew)
head(f)
tapply(bluew$ind_ident, min)
