summary(zinb)
summary(zinb)
summary(zinb$zi.fit)
summary(zinb$zi.fit)
summary(zinb)
View(zinb)
fixed(zinb)
fixed(zinb)$dist
plot.fixed(zinb)
out = fixed(zinb)
out = out$dist
out = out[out[,2]!="(Intercept)", ]
par(mfrow = c(1, 1), cex.axis = 1, mar = c(2, 12, 4, 4))
plot.fixed(res=out[,c("Estimate","Std.Error","padj")],
threshold=0.001, gap=500, col.pts=c("black", "grey"),
cex.axis=0.6, cex.var=0.7)
View(out)
out = fixed(zinb)
out = out$dist
out = out[out[,2]!="(Intercept)", ]
par(mfrow = c(1, 1), cex.axis = 1, mar = c(2, 12, 4, 4))
plot.fixed(res=out[,c("Estimate","Std.Error","pvalue")],
threshold=0.001, gap=500, col.pts=c("black", "grey"),
cex.axis=0.6, cex.var=0.7)
out = fixed(zinb)
out = out$dist
out = out[out[,2]!="(Intercept)", ]
par(mfrow = c(1, 1), cex.axis = 1, mar = c(2, 12, 4, 4))
heat.p(res=out[,c("Estimate","Std.Error","pvalue")],
threshold=0.001, gap=500, col.pts=c("black", "grey"),
cex.axis=0.6, cex.var=0.7)
out = fixed(zinb)
out = out$dist
out = out[out[,2]!="(Intercept)", ]
par(mfrow = c(1, 1), cex.axis = 1, mar = c(2, 12, 4, 4))
heat.p(df=out, p.breaks = c(0.001, 0.01, 0.05),
colors = c("black", "darkgrey", "grey", "lightgrey"),
zigzag=c(T,F), abbrv=c(T,F), margin=c(1,6), y.size=8,
legend=T)
out = fixed(zinb)
out = out$dist
out = out[out[,2]!="(Intercept)", ]
par(mfrow = c(1, 1), cex.axis = 1, mar = c(2, 12, 4, 4))
heat.p(df=out[,c("Estimate","Std.Error","pvalue")], p.breaks = c(0.001, 0.01, 0.05),
colors = c("black", "darkgrey", "grey", "lightgrey"),
zigzag=c(T,F), abbrv=c(T,F), margin=c(1,6), y.size=8,
legend=T)
out = fixed(zinb)
out = out$dist
out = out[out[,2]!="(Intercept)", ]
par(mfrow = c(1, 1), cex.axis = 1, mar = c(2, 12, 4, 4))
heat.p(df=out[,c("Response","Estimate","Std.Error","pvalue")], p.breaks = c(0.001, 0.01, 0.05),
colors = c("black", "darkgrey", "grey", "lightgrey"),
zigzag=c(T,F), abbrv=c(T,F), margin=c(1,6), y.size=8,
legend=T)
gc()
#install.packages('devtools')
#devtools::install_github('Westat-Transportation/summarizeNHTS')
library(summarizeNHTS)
library(terra)
library(sf)
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
nhts <- read_data("2017")
nhts_sum <- summarize_data(
data = nhts,
agg = "household_trip_rate",
label = F,
by = c("HHSTATE", "TRAIN", "HHFAMINC", "RAIL")
)
train_sum <- subset(nhts_sum, RAIL == "01" & TRAIN %in% c("01", "02", "03", "04", "05") & HHFAMINC %in% c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11"))
perc_freq <- train_sum %>%
group_by(TRAIN) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
perc_freq %>%
ggplot(aes(x = "", y = perc, fill = TRAIN)) +
geom_col() +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_discrete(name="Trip Frequency",labels = c("Daily", "Once in a week", "Once in a month", "Once in a year", "Never")) +
labs(title="Train Commuters in the US")
train_sum %>%
ggplot(aes(x=HHSTATE, y=W, fill=TRAIN)) +
geom_bar(position="fill", stat="identity") +
labs(title="Household Train Trips in the United States",
y = "Household Trips", x = "State") +
scale_fill_discrete(name ="Trip Frequency", labels = c("Daily", "Once in a week", "Once in a month", "Once in a year", "Never")) +
scale_y_continuous(label = scales::comma) +
coord_flip ()
train <- train_sum
train$HHFAMINC[train$HHFAMINC=="01"]<-"01"
train$HHFAMINC[train$HHFAMINC=="02"]<-"01"
train$HHFAMINC[train$HHFAMINC=="03"]<-"01"
train$HHFAMINC[train$HHFAMINC=="04"]<-"02"
train$HHFAMINC[train$HHFAMINC=="05"]<-"02"
train$HHFAMINC[train$HHFAMINC=="06"]<-"03"
train$HHFAMINC[train$HHFAMINC=="07"]<-"04"
train$HHFAMINC[train$HHFAMINC=="08"]<-"05"
train$HHFAMINC[train$HHFAMINC=="09"]<-"05"
train$HHFAMINC[train$HHFAMINC=="10"]<-"05"
train$HHFAMINC[train$HHFAMINC=="11"]<-"05"
train %>%
ggplot(aes(x=HHFAMINC, y=W, fill=TRAIN)) +
geom_bar(position="fill", stat="identity") +
facet_wrap(~HHSTATE) +
labs(title="Household Train Trips in the United States",
y = "Household Trips", x = "Household Income") +
scale_fill_discrete(name ="Trip Frequency", labels =c("Daily", "Once in a week", "Once in a month", "Once in a year", "Never")) +
scale_x_discrete(labels = c("Less than $25,000", "$25,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 or more")) +
scale_y_continuous(label = scales::comma) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
View(train_sum)
View(train)
t1 <- subset(train, TRAIN =="01")
t1 %>%
ggplot(aes(x=HHFAMINC, y=W)) +
geom_bar(position="stack", stat="identity") +
facet_wrap (~HHSTATE) +
labs(title="Daily Train Commuters in the United States",
y = "Household Trips", x = "Household Income") +
scale_x_discrete(labels = c("Less than $25,000", "$25,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 or more")) +
scale_y_continuous(label = scales::comma) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
train_ca <- subset(train, HHSTATE == "CA")
train_ca %>%
ggplot(aes(x=HHFAMINC, y=W, fill=TRAIN)) +
geom_bar(position="stack", stat="identity") +
labs(title="Household Train Trips in California",
y = "Household Trips", x = "Household Income") +
scale_fill_discrete(name ="Trip Frequency", labels =c("Daily", "Once in a week", "Once in a month", "Once in a year", "Never")) +
scale_x_discrete(labels = c("Less than \n $25,000", "$25,000 \nto $49,999", "$50,000 \nto $74,999", "$75,000 \nto $99,999", "$100,000 \nor more")) +
scale_y_continuous(label = scales::comma)
train_ca <- subset(train, HHSTATE == "CA")
train_ca %>%
ggplot(aes(x=HHFAMINC, y=W, fill=TRAIN)) +
geom_bar(position="stack", stat="identity") +
labs(title="Household Train Trips in California",
y = "Household Trips", x = "Household Income") +
scale_fill_discrete(name ="Trip Frequency", labels =c("Daily", "Once in a week", "Once in a month", "Once in a year", "Never")) +
scale_x_discrete(labels = c("Less than \n $25,000", "$25,000 \nto $49,999", "$50,000 \nto $74,999", "$75,000 \nto $99,999", "$100,000 \nor more")) +
scale_y_continuous(label = scales::comma)
train_ca <- subset(train, HHSTATE == "CA")
train_ca %>%
ggplot(aes(x=HHFAMINC, y=W, fill=TRAIN)) +
geom_bar(position="stack", stat="identity") +
labs(title="Household Train Trips in California",
y = "Household Trips", x = "Household Income") +
scale_fill_discrete(name ="Trip Frequency", labels =c("Daily", "Once in a week", "Once in a month", "Once in a year", "Never")) +
scale_x_discrete(labels = c("Less than \n $25,000", "$25,000 \nto $49,999", "$50,000 \nto $74,999", "$75,000 \nto $99,999", "$100,000 \nor more"))
ca1 <- subset(train_ca, TRAIN =="01")
perc_inc <- ca1 %>%
group_by(HHFAMINC) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
pie_ca <- perc_inc %>%
ggplot(aes(x = "", y = perc, fill = HHFAMINC)) +
geom_col() +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_discrete(name="Income",labels = c("Less than $25,000", "$25,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 or more")) +
labs(title="Household Income of Daily Train Commuters in California")
pie_ca
ca1 <- subset(train_ca, TRAIN =="01")
perc_inc <- ca1 %>%
group_by(HHFAMINC) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
pie_ca <- perc_inc %>%
ggplot(aes(x = "", y = perc, fill = HHFAMINC)) +
geom_col() +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
theme_void() +
scale_fill_discrete(name="Income",labels = c("Less than $25,000", "$25,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 or more")) +
labs(title="Household Income of Daily Train Commuters in California")
pie_ca
model <- glmm.nb(fixed = W ~ HHFAMINC,
random = ~ 1 | TRAIN, data = train_ca, zi_fixed = ~1)
summary(model)
model
table(model)
summary(model)
route <- read_sf("csv/data/lr_routes/Light_Rail_Routes.shp") %>%
st_transform(6417)
stops <- read_sf("csv/data/lr_stations.geojson") %>%
st_transform(6417)
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
geom_sf(data = stops) +
scale_color_identity(guide = "legend", name = "SacRT Light Rail") +
theme_bw() +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="SacRT Light Rail Route and Stops")
knitr::opts_chunk$set(echo = TRUE)
stops_income <- sf::st_join(stops, income, join = st_intersects, left = T)
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
geom_sf(data = stops) +
scale_color_identity(guide = "legend", name = "SacRT Light Rail") +
theme_bw() +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="SacRT Light Rail Route and Stops")
#install.packages('devtools')
#devtools::install_github('Westat-Transportation/summarizeNHTS')
library(summarizeNHTS)
library(terra)
library(sf)
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
geom_sf(data = stops) +
scale_color_identity(guide = "legend", name = "SacRT Light Rail") +
theme_bw() +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="SacRT Light Rail Route and Stops")
income <- read_sf("csv/data/sacramento_income.gpkg") %>%
st_transform(6417)
stops_income <- sf::st_join(stops, income, join = st_intersects, left = T)
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes(color = c("blue","green","yellow")), lwd = 1) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes( lwd = 1) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes(lwd = 1)) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
route_map <- ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
geom_sf(data = stops) +
scale_color_identity(guide = "legend", name = "SacRT Light Rail") +
theme_bw() +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="SacRT Light Rail Route and Stops")
route_map
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
route_map +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops") +
ggplot_add(route_map)
route_map +
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot_add(route_map) +
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot_add(route_map) +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot(route_map) +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
route_map +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes(color = as.factor(Line)), lwd = 1) +
geom_sf(data = stops_income, aes(color = estimate)) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes(color = as.factor(Line)), lwd = 1) +
geom_sf(data = stops_income, aes(color = as.factor(estimate))) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
geom_sf(data = stops_income, aes(color = as.factor(estimate))) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
geom_sf(data = route, aes(color = as.factor(Line)), lwd = 1) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = as.factor(estimate))) +
geom_sf(data = route, aes(color = Line), lwd = 1) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
geom_sf(data = route, aes(color = "pink"), lwd = 1) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = estimate)) +
geom_sf(data = route) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
View(route)
View(income)
ggplot(income)
plot(income)
plot$estimate(income)
plot(income)
income <- read_sf("csv/data/sacramento_income.gpkg") %>%
st_transform(6417)
income <- read_sf("csv/data/sacramento_income.gpkg") %>%
st_transform(6417)
stops_income <- sf::st_join(stops, income, join = st_intersects, left = T)
names(stops_income)[names(stops_income) == 'estimate'] <- 'Income'
names(stops_income)[names(stops_income) == 'estimate'] <- 'Income'
View(stops_income)
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.5) +
geom_sf(data = stops_income, aes(color = Income)) +
geom_sf(data = route) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = stops_income, aes(color = Income)) +
geom_sf(data = route) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
stops_income <- sf::st_join(stops, income, join = st_intersects, left = F)
names(stops_income)[names(stops_income) == 'estimate'] <- 'Income'
View(stops_income)
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = stops_income, aes(color = Income)) +
geom_sf(data = route) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
stops_income <- sf::st_join(stops, income, join = st_intersects, left = T)
names(stops_income)[names(stops_income) == 'estimate'] <- 'Income'
ggplot() +
ggspatial::annotation_map_tile(alpha = 0.3) +
geom_sf(data = stops_income, aes(color = Income)) +
geom_sf(data = route) +
theme(axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title="Household Income around SacRT Light Rail Stops")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')
#devtools::install_github('Westat-Transportation/summarizeNHTS')
library(summarizeNHTS)
library(terra)
library(sf)
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
unzip("csv.zip")
nhts <- read_data("2017")
nhts_sum <- summarize_data(
data = nhts,
agg = "household_trip_rate",
label = F,
by = c("HHSTATE", "TRAIN", "HHFAMINC", "RAIL")
)
knitr::opts_chunk$set(echo = TRUE)
#install.packages('devtools')
#devtools::install_github('Westat-Transportation/summarizeNHTS')
library(summarizeNHTS)
library(terra)
library(sf)
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
unzip("data.zip")
download_nhts_data("2017", "C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
gc()
#install.packages('devtools')
#devtools::install_github('Westat-Transportation/summarizeNHTS')
library(summarizeNHTS)
library(terra)
library(sf)
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
unzip("data.zip")
download_nhts_data("2017", "C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
unzip("data.zip")
# sign below must be removed in order to download the NHTS 2017 data
#download_nhts_data("2017", "C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
nhts <- read_data("2017")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
unzip("data.zip")
# sign below must be removed in order to download the NHTS 2017 data
#download_nhts_data("2017", "C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
nhts <- read_data("2017")
#install.packages('devtools')
#devtools::install_github('Westat-Transportation/summarizeNHTS')
library(summarizeNHTS)
library(terra)
library(sf)
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)
setwd("C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
unzip("data.zip")
# sign below must be removed in order to download the NHTS 2017 data
#download_nhts_data("2017", "C:/Users/Benny Panjaitan/Documents/GitHub/esp106-Naomi/final")
nhts <- read_data("2017")
